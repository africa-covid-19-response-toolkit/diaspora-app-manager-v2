{"version":3,"sources":["components/Auth/SignIn.js","components/Auth/SignUp/TermsAndConditions.js","components/Auth/SignUp/SignUp.js","components/Auth/ForgotPassword.js","components/Dashboard/Dashboard.js","components/Messages/Messages.js","components/Questions/Questions.js","components/Settings/Settings.js","components/Auth/SignOut/SignedOut.js","routeList.js","components/Auth/SignOut/SignOutModal.js","components/Layout/SideNav/SideNavConfig.js","components/Layout/SideNav/SideNav.js","components/Layout/GlobalContent.js","components/Layout/GlobalLayout.js","App.js","serviceWorker.js","index.js"],"names":["Item","Form","SignIn","onFinish","values","console","log","state","email","password","name","className","initialValues","remember","this","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","to","htmlType","Component","termsAndConditions","Link","styled","Button","displayName","TermsAndConditions","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","onClick","title","onOk","onCancel","SignUp","useForm","form","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","_","ForgotPassword","Dashboard","Messages","Questions","Settings","SignedOut","status","publicRoutes","exact","path","render","props","restrictedRoutes","MenuButton","SignOutModal","e","redirect","icon","LogoutOutlined","SCREEN_NAMES","SIDE_NAV_CONFIG","DASHBOARD","HomeOutlined","MESSAGES","MailOutlined","QUESTIONS","QuestionCircleOutlined","SETTINGS","SettingOutlined","SIGN_OUT","modal","Menu","Sider","Layout","SideNav","useState","collapsed","setCollapsed","collapsible","onCollapse","style","overflow","height","position","top","left","theme","defaultSelectedKeys","mode","Object","keys","map","currentMenuItem","key","Content","GlobalContent","children","margin","padding","background","minHeight","GlobalLayout","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.75307f30.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\n\nconst { Item } = Form;\n\nclass SignIn extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: \"\", \n      password: \"\"\n    }\n  }\n\n  onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  render() {\n    return (\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={this.onFinish}\n      >\n        <Item\n          name=\"username\"\n          rules={[{ required: true, message: 'Please input your username.' }]}\n        > Username\n          <Input prefix={<UserOutlined />} placeholder=\"Enter your username\" />\n        </Item>\n        <Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password.' }]}\n        >\n          Password\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Enter your password\"\n          />\n        </Item>\n        <Item>\n          <Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Item>\n          <br/>\n          <Link to=\"/forgot_password\">\n            Forgot password?\n          </Link>\n        </Item>\n        <Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          <br/>\n          Or <Link to=\"/sign_up\">\n            register now!\n          </Link>\n        </Item>\n      </Form>\n    );\n  };\n};\n\nexport default SignIn; ","import React, { Component, Fragment } from \"react\";\nimport { Modal, Button, Checkbox } from 'antd';\nimport styled from \"styled-components\";\n\nconst termsAndConditions = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`;\n\nconst Link = styled(Button)`\n  border: none !important;\n  padding: 5px;\n  color: #39b5fb; \n`;\nLink.displayName = \"Link\";\n\nclass TermsAndConditions extends Component {\n  state = {\n    ModalText: termsAndConditions, \n    visible: false,\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 500);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <Fragment>\n        <Checkbox>\n          I have read the <Link onClick={this.showModal}> terms and conditions</Link>\n        </Checkbox>\n        <Modal\n          title=\"Terms and Conditions\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <p>{ModalText}</p>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default TermsAndConditions;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport TermsAndConditions from \"./TermsAndConditions\";\n\nconst { Item } = Form; \n\nconst SignUp = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      scrollToFirstError\n    >\n      <Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: 'email',\n            message: 'Please input a valid email.',\n          },\n          {\n            required: true,\n            message: 'Please input your e-mail.',\n          },\n        ]}\n      >\n        <Input />\n      </Item>\n\n      <Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password.',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Item>\n\n      <Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password.',\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match.');\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Item>\n\n      <Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value ? Promise.resolve() : Promise.reject('Please accept the terms and agreement.'),\n          },\n        ]}\n      >\n        <TermsAndConditions />\n      </Item>\n\n      <Item >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Item>\n      \n    </Form>\n  );\n};\n\nexport default SignUp;","import React, {Component} from \"react\";\n\nclass ForgotPassword extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  render() {\n    return (\n      <div>\n        <h1>ForgotPassword</h1>\n      </div>\n    )\n  }\n};\n\nexport default ForgotPassword; ","import React, {Component} from 'react'\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  render() {\n    return (\n      <div>\n        <h1>Dashboard</h1>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard; ","import React, {Component} from \"react\";\n\nclass Messages extends Component {\n  constructor() {\n      super()\n      this.state = {}\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Messages</h1>\n      </div>\n    )\n  }\n}\n\nexport default Messages;","import React, {Component} from 'react'\n\nclass Questions extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  render() {\n    return (\n      <div>\n        <h1>Questions</h1>\n      </div>\n    )\n  }\n}\n\nexport default Questions; ","import React, {Component} from 'react'\n\nclass Settings extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  render() {\n    return (\n      <div>\n        <h1>Settings</h1>\n      </div>\n    )\n  }\n}\n\nexport default Settings; ","import React from \"react\";\nimport { Result } from 'antd';\n\nconst SignedOut = () => {\n    return(\n        <Result\n            status=\"success\"\n            title=\"You've successfully logged out.\"\n        />\n    );\n};\n\nexport default SignedOut; ","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport SignIn from \"./components/Auth/SignIn\";\nimport SignUp from \"./components/Auth/SignUp/SignUp\";\nimport ForgotPassword from \"./components/Auth/ForgotPassword\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Messages from \"./components/Messages/Messages\";\nimport Questions from \"./components/Questions/Questions\";\nimport Settings from \"./components/Settings/Settings\";\nimport SignedOut from \"./components/Auth/SignOut/SignedOut\";\n\nconst publicRoutes = [\n    <Route exact path=\"/\" render={props => <SignIn {...props} />} />,\n    <Route exact path=\"/forgot_password\" render={props => <ForgotPassword {...props} />} />,\n    <Route exact path=\"/signup\" render={props => <SignUp {...props} />} />\n];\n  \nconst restrictedRoutes = [\n    <Route exact path=\"/dashboard\" render={props => <Dashboard {...props} />} />,\n    <Route path=\"/messages\" render={props => <Messages {...props} />} />,\n    <Route path=\"/questions\" render={props => <Questions {...props} />} />,\n    <Route path=\"/settings\" render={props => <Settings {...props} />} />,\n    <Route path=\"/signed_out\" render={props => <SignedOut {...props} />} />\n];\n\nexport { publicRoutes, restrictedRoutes };","import React, { Component, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Modal, Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport styled from \"styled-components\";\n\nconst MenuButton = styled(Button)`\n  margin-left: 10px;\n  color: #afb6bb; \n  :hover {\n    color: red !important;\n  }\n`;\n\nclass SignOutModal extends Component {\n  constructor() {\n    super()\n    this.state = {\n      visible: false, \n      redirect: false, \n    }\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    console.log(\"Signing out\");\n    this.setState({\n      visible: false,\n      redirect: true\n    });\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { redirect } = this.state;\n    return(\n      redirect ? \n        <Redirect to=\"/signed_out\" />\n      : \n        <Fragment>\n          <MenuButton type=\"link\" icon={<LogoutOutlined />} onClick={this.showModal}>\n            Sign out\n          </MenuButton>\n          <Modal\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n          >\n            Are you sure you want to sign out?\n          </Modal>\n        </Fragment>\n      )\n  };\n};\n\nexport default SignOutModal; ","import React from \"react\";\nimport {\n    HomeOutlined,\n    MailOutlined,\n    QuestionCircleOutlined,\n    SettingOutlined\n} from '@ant-design/icons';\nimport SignOutModal from \"../../Auth/SignOut/SignOutModal\";\n\nconst SCREEN_NAMES = {\n    DASHBOARD: \"Dashboard\", \n    MESSAGES: \"Messages\", \n    QUESTIONS: \"Questions\", \n    SETTINGS: \"Settings\", \n    SIGN_OUT: \"Sign out\"\n};\n \nconst SIDE_NAV_CONFIG = {\n    DASHBOARD: {\n        icon: <HomeOutlined />, \n        name: SCREEN_NAMES.DASHBOARD, \n        path: \"/dashboard\"\n    }, \n    MESSAGES: {\n        icon: <MailOutlined />, \n        name: SCREEN_NAMES.MESSAGES,\n        path: \"/messages\"\n    },\n    QUESTIONS: {\n        icon: <QuestionCircleOutlined />, \n        name: SCREEN_NAMES.QUESTIONS, \n        path: \"/questions\"\n    }, \n    SETTINGS: {\n        icon: <SettingOutlined />,\n        name: SCREEN_NAMES.SETTINGS, \n        path: \"/settings\"\n    },\n    SIGN_OUT: {\n        modal: <SignOutModal />,\n    }\n};\n\nexport {SCREEN_NAMES, SIDE_NAV_CONFIG};","import React, {useState} from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {SIDE_NAV_CONFIG} from \"./SideNavConfig\";\n\nconst { Item } = Menu; \nconst { Sider } = Layout;\nconst INITIAL_COLLAPSE_STATE = false;\n\nconst SideNav = () => {\n    const [collapsed, setCollapsed] = useState(INITIAL_COLLAPSE_STATE);\n\n    const handleCollapse = () => {\n        setCollapsed(!collapsed)\n    };\n\n    const renderMenu = () => {\n        return (\n            <Menu \n                theme=\"dark\" \n                defaultSelectedKeys={['/']} \n                mode=\"inline\"\n            >\n                {Object.keys(SIDE_NAV_CONFIG).map((currentMenuItem) => {\n                    const {icon, name, path, modal} = SIDE_NAV_CONFIG[currentMenuItem];\n                    return( \n                        modal ?\n                           modal\n                        : \n                            <Item key={path} icon={icon}>\n                                <Link to={path}>\n                                    {name}\n                                </Link>\n                            </Item>\n                    )\n                })}\n            </Menu>\n        )\n    };\n\n    return(\n        <Sider \n            collapsible \n            collapsed={collapsed} \n            onCollapse={handleCollapse}\n            style={{\n                overflow: \"auto\",\n                height: \"100vh\",\n                position: \"sticky\",\n                top: 0,\n                left: 0\n            }}\n        >\n            {renderMenu()}\n        </Sider>\n    )\n};\n\nexport default SideNav;","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nconst GlobalContent = ({children}) => { \n  return (\n    <Content\n      style={{\n        margin: '24px 16px',\n        padding: 24,\n        background: '#fff',\n        minHeight: 400,\n      }}\n    >\n      {children}\n    </Content>\n  );\n};\n\nexport default GlobalContent;","import React from 'react';\nimport { Layout } from \"antd\";\nimport SideNav from \"./SideNav/SideNav\";\nimport GlobalContent from \"./GlobalContent\";\n\nconst GlobalLayout = ({children}) => {\n    return(\n        <Layout style={{ minHeight: \"100vh\"}}>\n            <SideNav />\n            <Layout>\n                <GlobalContent>{children}</GlobalContent>\n            </Layout>\n        </Layout>\n    )\n};\n\nexport default GlobalLayout; ","import React from \"react\";\nimport {publicRoutes, restrictedRoutes} from \"./routeList\";\nimport GlobalLayout from \"./components/Layout/GlobalLayout\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\n\n\nconst App = () => {\n  return (\n    <Router>\n      <GlobalLayout>\n        <Switch>\n          {restrictedRoutes}\n          {publicRoutes}\n        </Switch>\n      </GlobalLayout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}